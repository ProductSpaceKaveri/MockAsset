// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class SubAsset extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.SubAsset";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Sub_AssetId("Sub_AssetId"),
		Assetname("Assetname"),
		Alerts("Alerts"),
		Location("Location"),
		User("User"),
		PublicThumbnailPath("PublicThumbnailPath"),
		EnableCaching("EnableCaching"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		SubAsset_Assets("MyFirstModule.SubAsset_Assets");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SubAsset(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected SubAsset(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject subAssetMendixObject)
	{
		super(context, subAssetMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, subAssetMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static myfirstmodule.proxies.SubAsset initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.SubAsset(context, mendixObject);
	}

	public static myfirstmodule.proxies.SubAsset load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.SubAsset.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.SubAsset> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> myfirstmodule.proxies.SubAsset.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Sub_AssetId
	 */
	public final java.lang.String getSub_AssetId()
	{
		return getSub_AssetId(getContext());
	}

	/**
	 * @param context
	 * @return value of Sub_AssetId
	 */
	public final java.lang.String getSub_AssetId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Sub_AssetId.toString());
	}

	/**
	 * Set value of Sub_AssetId
	 * @param sub_assetid
	 */
	public final void setSub_AssetId(java.lang.String sub_assetid)
	{
		setSub_AssetId(getContext(), sub_assetid);
	}

	/**
	 * Set value of Sub_AssetId
	 * @param context
	 * @param sub_assetid
	 */
	public final void setSub_AssetId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sub_assetid)
	{
		getMendixObject().setValue(context, MemberNames.Sub_AssetId.toString(), sub_assetid);
	}

	/**
	 * @return value of Assetname
	 */
	public final java.lang.String getAssetname()
	{
		return getAssetname(getContext());
	}

	/**
	 * @param context
	 * @return value of Assetname
	 */
	public final java.lang.String getAssetname(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Assetname.toString());
	}

	/**
	 * Set value of Assetname
	 * @param assetname
	 */
	public final void setAssetname(java.lang.String assetname)
	{
		setAssetname(getContext(), assetname);
	}

	/**
	 * Set value of Assetname
	 * @param context
	 * @param assetname
	 */
	public final void setAssetname(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String assetname)
	{
		getMendixObject().setValue(context, MemberNames.Assetname.toString(), assetname);
	}

	/**
	 * @return value of Alerts
	 */
	public final java.lang.Integer getAlerts()
	{
		return getAlerts(getContext());
	}

	/**
	 * @param context
	 * @return value of Alerts
	 */
	public final java.lang.Integer getAlerts(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Alerts.toString());
	}

	/**
	 * Set value of Alerts
	 * @param alerts
	 */
	public final void setAlerts(java.lang.Integer alerts)
	{
		setAlerts(getContext(), alerts);
	}

	/**
	 * Set value of Alerts
	 * @param context
	 * @param alerts
	 */
	public final void setAlerts(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer alerts)
	{
		getMendixObject().setValue(context, MemberNames.Alerts.toString(), alerts);
	}

	/**
	 * @return value of Location
	 */
	public final java.lang.String getLocation()
	{
		return getLocation(getContext());
	}

	/**
	 * @param context
	 * @return value of Location
	 */
	public final java.lang.String getLocation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Location.toString());
	}

	/**
	 * Set value of Location
	 * @param location
	 */
	public final void setLocation(java.lang.String location)
	{
		setLocation(getContext(), location);
	}

	/**
	 * Set value of Location
	 * @param context
	 * @param location
	 */
	public final void setLocation(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String location)
	{
		getMendixObject().setValue(context, MemberNames.Location.toString(), location);
	}

	/**
	 * @return value of User
	 */
	public final java.lang.String getUser()
	{
		return getUser(getContext());
	}

	/**
	 * @param context
	 * @return value of User
	 */
	public final java.lang.String getUser(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.User.toString());
	}

	/**
	 * Set value of User
	 * @param user
	 */
	public final void setUser(java.lang.String user)
	{
		setUser(getContext(), user);
	}

	/**
	 * Set value of User
	 * @param context
	 * @param user
	 */
	public final void setUser(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String user)
	{
		getMendixObject().setValue(context, MemberNames.User.toString(), user);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of SubAsset_Assets
	 */
	public final java.util.List<myfirstmodule.proxies.Assets> getSubAsset_Assets() throws com.mendix.core.CoreException
	{
		return getSubAsset_Assets(getContext());
	}

	/**
	 * @param context
	 * @return value of SubAsset_Assets
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<myfirstmodule.proxies.Assets> getSubAsset_Assets(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Assets> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.SubAsset_Assets.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(myfirstmodule.proxies.Assets.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of SubAsset_Assets
	 * @param subasset_assets
	 */
	public final void setSubAsset_Assets(java.util.List<myfirstmodule.proxies.Assets> subasset_assets)
	{
		setSubAsset_Assets(getContext(), subasset_assets);
	}

	/**
	 * Set value of SubAsset_Assets
	 * @param context
	 * @param subasset_assets
	 */
	public final void setSubAsset_Assets(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<myfirstmodule.proxies.Assets> subasset_assets)
	{
		var identifiers = subasset_assets
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.SubAsset_Assets.toString(), identifiers);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.SubAsset that = (myfirstmodule.proxies.SubAsset) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
